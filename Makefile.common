DEPS_DIR          = $(CORE_DIR)/core/deps
LIBRETRO_COMM_DIR = $(CORE_DIR)/core/libretro-common

INCFLAGS    += -I$(CORE_DIR)/core/libretro \
					-I$(CORE_DIR)/core/ \
					-I$(DEPS_DIR) \
					-I$(DEPS_DIR)/picotcp/include \
					-I$(DEPS_DIR)/picotcp/modules \
					-I$(LIBRETRO_COMM_DIR)/include \
					-I$(DEPS_DIR)/vixl

ifeq ($(THREADED_RENDERING_DEFAULT), 1)
CORE_DEFINES += -DTHREADED_RENDERING_DEFAULT
endif

ifeq ($(THREADED_RENDERING_DEFAULT), 1)
CORE_DEFINES += -DTHREADED_RENDERING_DEFAULT
endif

SOURCES_C   ?=
SOURCES_CXX := \
					$(CORE_DIR)/core/hw/arm7/arm_mem.cpp \
					$(CORE_DIR)/core/hw/arm7/arm64.cpp \
					$(CORE_DIR)/core/hw/arm7/arm7.cpp \
					$(CORE_DIR)/core/hw/arm7/vbaARM.cpp \
					$(CORE_DIR)/core/hw/arm7/virt_arm.cpp \
					\
					$(CORE_DIR)/core/hw/aica/dsp.cpp \
					$(CORE_DIR)/core/hw/aica/dsp_arm64.cpp \
					$(CORE_DIR)/core/hw/aica/dsp_interp.cpp \
					$(CORE_DIR)/core/hw/aica/aica.cpp \
					$(CORE_DIR)/core/hw/aica/aica_if.cpp \
					$(CORE_DIR)/core/hw/aica/aica_mem.cpp \
					$(CORE_DIR)/core/hw/aica/sgc_if.cpp \
					\
					$(CORE_DIR)/core/hw/holly/holly_intc.cpp \
					$(CORE_DIR)/core/hw/holly/sb.cpp \
					$(CORE_DIR)/core/hw/holly/sb_mem.cpp \
					\
					$(CORE_DIR)/core/hw/gdrom/gdrom_response.cpp \
					$(CORE_DIR)/core/hw/gdrom/gdromv3.cpp \
					\
					$(CORE_DIR)/core/hw/maple/maple_helper.cpp \
					$(CORE_DIR)/core/hw/maple/maple_devs.cpp \
					$(CORE_DIR)/core/hw/maple/maple_if.cpp \
					$(CORE_DIR)/core/hw/maple/maple_cfg.cpp \
					\
					$(CORE_DIR)/core/hw/mem/_vmem.cpp \
					$(CORE_DIR)/core/hw/mem/vmem32.cpp \
					\
					$(CORE_DIR)/core/hw/pvr/drkPvr.cpp \
					$(CORE_DIR)/core/hw/pvr/Renderer_if.cpp \
					$(CORE_DIR)/core/hw/pvr/pvr_mem.cpp \
					$(CORE_DIR)/core/hw/pvr/pvr_regs.cpp \
					$(CORE_DIR)/core/hw/pvr/pvr_sb_regs.cpp \
					$(CORE_DIR)/core/hw/pvr/spg.cpp \
					$(CORE_DIR)/core/hw/pvr/ta.cpp \
					$(CORE_DIR)/core/hw/pvr/ta_ctx.cpp \
					$(CORE_DIR)/core/hw/pvr/ta_vtx.cpp \
					$(CORE_DIR)/core/rend/TexCache.cpp \
					\
					$(CORE_DIR)/core/hw/sh4/sh4_mmr.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_mem.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_interrupts.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_rom.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_core_regs.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_sched.cpp \
					$(CORE_DIR)/core/hw/sh4/sh4_opcode_list.cpp \
					$(CORE_DIR)/core/hw/sh4/interpr/sh4_interpreter.cpp \
					$(CORE_DIR)/core/hw/sh4/interpr/sh4_fpu.cpp \
					$(CORE_DIR)/core/hw/sh4/interpr/sh4_opcodes.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/serial.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/rtc.cpp  \
					$(CORE_DIR)/core/hw/sh4/modules/bsc.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/tmu.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/ccn.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/intc.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/ubc.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/cpg.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/dmac.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/mmu.cpp \
					$(CORE_DIR)/core/hw/sh4/modules/fastmmu.cpp \
					$(CORE_DIR)/core/imgread/ImgReader.cpp \
					$(CORE_DIR)/core/imgread/cdi.cpp \
					$(CORE_DIR)/core/imgread/chd.cpp \
					$(CORE_DIR)/core/imgread/common.cpp \
					$(CORE_DIR)/core/imgread/cue.cpp \
					$(CORE_DIR)/core/imgread/gdi.cpp \
					$(CORE_DIR)/core/log/ConsoleListener.cpp \
					$(CORE_DIR)/core/log/LogManager.cpp \
					\
					$(CORE_DIR)/core/cheats.cpp \
					$(CORE_DIR)/core/nullDC.cpp \
					$(CORE_DIR)/core/serialize.cpp \
					$(CORE_DIR)/core/stdclass.cpp \
					\
					$(DEPS_DIR)/coreio/coreio.cpp \
					$(DEPS_DIR)/crypto/sha1.cpp \
					$(DEPS_DIR)/crypto/sha256.cpp \
					$(DEPS_DIR)/crypto/md5.cpp \
					$(DEPS_DIR)/libelf/elf.cpp \
					$(DEPS_DIR)/libelf/elf32.cpp \
					$(DEPS_DIR)/libelf/elf64.cpp \
					$(DEPS_DIR)/chdpsr/cdipsr.cpp \
					\
					\
					$(CORE_DIR)/core/reios/reios_elf.cpp \
					$(CORE_DIR)/core/reios/reios.cpp \
					$(CORE_DIR)/core/reios/gdrom_hle.cpp \
					$(CORE_DIR)/core/reios/descrambl.cpp \
					\
					$(CORE_DIR)/core/archive/archive.cpp \
					$(CORE_DIR)/core/archive/7zArchive.cpp \
					$(CORE_DIR)/core/archive/ZipArchive.cpp

SOURCES_C +=   \
					$(DEPS_DIR)/chdr/bitstream.c \
					$(DEPS_DIR)/chdr/cdrom.c \
					$(DEPS_DIR)/chdr/chd.c \
					$(DEPS_DIR)/chdr/flac.c \
					$(DEPS_DIR)/chdr/huffman.c \
					\
					$(DEPS_DIR)/libpng/png.c \
					$(DEPS_DIR)/libpng/pngerror.c \
					$(DEPS_DIR)/libpng/pngget.c \
					$(DEPS_DIR)/libpng/pngmem.c \
					$(DEPS_DIR)/libpng/pngpread.c \
					$(DEPS_DIR)/libpng/pngread.c \
					$(DEPS_DIR)/libpng/pngrio.c \
					$(DEPS_DIR)/libpng/pngrtran.c \
					$(DEPS_DIR)/libpng/pngrutil.c \
					$(DEPS_DIR)/libpng/pngset.c \
					$(DEPS_DIR)/libpng/pngtrans.c \
					$(DEPS_DIR)/libpng/pngwio.c \
					$(DEPS_DIR)/libpng/pngwrite.c \
					$(DEPS_DIR)/libpng/pngwtran.c \
					$(DEPS_DIR)/libpng/pngwutil.c \
					\
					$(DEPS_DIR)/libzip/mkstemp.c \
					$(DEPS_DIR)/libzip/zip_add.c \
					$(DEPS_DIR)/libzip/zip_add_dir.c \
					$(DEPS_DIR)/libzip/zip_close.c \
					$(DEPS_DIR)/libzip/zip_delete.c \
					$(DEPS_DIR)/libzip/zip_dirent.c \
					$(DEPS_DIR)/libzip/zip_entry_free.c \
					$(DEPS_DIR)/libzip/zip_entry_new.c \
					$(DEPS_DIR)/libzip/zip_error.c \
					$(DEPS_DIR)/libzip/zip_error_clear.c \
					$(DEPS_DIR)/libzip/zip_error_get.c \
					$(DEPS_DIR)/libzip/zip_error_get_sys_type.c \
					$(DEPS_DIR)/libzip/zip_error_strerror.c \
					$(DEPS_DIR)/libzip/zip_error_to_str.c \
					$(DEPS_DIR)/libzip/zip_err_str.c \
					$(DEPS_DIR)/libzip/zip_fclose.c \
					$(DEPS_DIR)/libzip/zip_file_error_clear.c \
					$(DEPS_DIR)/libzip/zip_file_error_get.c \
					$(DEPS_DIR)/libzip/zip_file_get_offset.c \
					$(DEPS_DIR)/libzip/zip_filerange_crc.c \
					$(DEPS_DIR)/libzip/zip_file_strerror.c \
					$(DEPS_DIR)/libzip/zip_fopen.c \
					$(DEPS_DIR)/libzip/zip_fopen_index.c \
					$(DEPS_DIR)/libzip/zip_fread.c \
					$(DEPS_DIR)/libzip/zip_free.c \
					$(DEPS_DIR)/libzip/zip_get_archive_comment.c \
					$(DEPS_DIR)/libzip/zip_get_archive_flag.c \
					$(DEPS_DIR)/libzip/zip_get_file_comment.c \
					$(DEPS_DIR)/libzip/zip_get_name.c \
					$(DEPS_DIR)/libzip/zip_get_num_files.c \
					$(DEPS_DIR)/libzip/zip_memdup.c \
					$(DEPS_DIR)/libzip/zip_name_locate.c \
					$(DEPS_DIR)/libzip/zip_new.c \
					$(DEPS_DIR)/libzip/zip_open.c \
					$(DEPS_DIR)/libzip/zip_rename.c \
					$(DEPS_DIR)/libzip/zip_replace.c \
					$(DEPS_DIR)/libzip/zip_set_archive_comment.c \
					$(DEPS_DIR)/libzip/zip_set_archive_flag.c \
					$(DEPS_DIR)/libzip/zip_set_file_comment.c \
					$(DEPS_DIR)/libzip/zip_set_name.c \
					$(DEPS_DIR)/libzip/zip_source_buffer.c \
					$(DEPS_DIR)/libzip/zip_source_file.c \
					$(DEPS_DIR)/libzip/zip_source_filep.c \
					$(DEPS_DIR)/libzip/zip_source_free.c \
					$(DEPS_DIR)/libzip/zip_source_function.c \
					$(DEPS_DIR)/libzip/zip_source_zip.c \
					$(DEPS_DIR)/libzip/zip_stat.c \
					$(DEPS_DIR)/libzip/zip_stat_index.c \
					$(DEPS_DIR)/libzip/zip_stat_init.c \
					$(DEPS_DIR)/libzip/zip_strerror.c \
					$(DEPS_DIR)/libzip/zip_unchange_all.c \
					$(DEPS_DIR)/libzip/zip_unchange_archive.c \
					$(DEPS_DIR)/libzip/zip_unchange.c \
					$(DEPS_DIR)/libzip/zip_unchange_data.c \
					\
					$(DEPS_DIR)/picotcp/modules/pico_arp.c \
					$(DEPS_DIR)/picotcp/modules/pico_dev_ppp.c \
					$(DEPS_DIR)/picotcp/modules/pico_dns_client.c \
					$(DEPS_DIR)/picotcp/modules/pico_dns_common.c \
					$(DEPS_DIR)/picotcp/modules/pico_ethernet.c \
					$(DEPS_DIR)/picotcp/modules/pico_fragments.c \
					$(DEPS_DIR)/picotcp/modules/pico_ipv4.c\
					$(DEPS_DIR)/picotcp/modules/pico_socket_tcp.c \
					$(DEPS_DIR)/picotcp/modules/pico_socket_udp.c \
					$(DEPS_DIR)/picotcp/modules/pico_tcp.c \
					$(DEPS_DIR)/picotcp/modules/pico_udp.c \
					$(DEPS_DIR)/picotcp/stack/pico_device.c \
					$(DEPS_DIR)/picotcp/stack/pico_frame.c \
					$(DEPS_DIR)/picotcp/stack/pico_md5.c \
					$(DEPS_DIR)/picotcp/stack/pico_protocol.c \
					$(DEPS_DIR)/picotcp/stack/pico_socket_multicast.c \
					$(DEPS_DIR)/picotcp/stack/pico_socket.c \
					$(DEPS_DIR)/picotcp/stack/pico_stack.c \
					$(DEPS_DIR)/picotcp/stack/pico_tree.c \
					$(DEPS_DIR)/xxhash/xxhash.c

SOURCES_ASM :=

ifeq ($(NO_REND), 1)
SOURCES_CXX += $(CORE_DIR)/core/rend/norend/norend.cpp
endif

ifeq ($(HAVE_MODEM), 1)
SOURCES_CXX += $(CORE_DIR)/core/hw/modem/dns.cpp \
				$(CORE_DIR)/core/hw/modem/modem.cpp \
				$(CORE_DIR)/core/hw/modem/picoppp.cpp

CORE_DEFINES += -DHAVE_MODEM
endif

ifeq ($(HAVE_GL), 1)

SOURCES_CXX += $(CORE_DIR)/core/rend/gles/gles.cpp \
					$(CORE_DIR)/core/rend/gles/gldraw.cpp \
					$(CORE_DIR)/core/rend/gles/gltex.cpp \
					$(CORE_DIR)/core/rend/gles/CustomTexture.cpp
ifeq ($(HAVE_OIT), 1)
SOURCES_CXX += $(CORE_DIR)/core/rend/gl4/gles.cpp \
					$(CORE_DIR)/core/rend/gl4/gldraw.cpp \
					$(CORE_DIR)/core/rend/gl4/gltex.cpp \
					$(CORE_DIR)/core/rend/gl4/abuffer.cpp
endif
SOURCES_C   += $(LIBRETRO_COMM_DIR)/glsym/rglgen.c \
					$(LIBRETRO_COMM_DIR)/glsm/glsm.c
ifeq ($(GLES), 1)
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_es2.c
else
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_gl.c
endif
endif

SOURCES_CXX += $(CORE_DIR)/core/hw/naomi/naomi.cpp \
					$(CORE_DIR)/core/hw/naomi/naomi_cart.cpp \
					$(CORE_DIR)/core/hw/naomi/decrypt.cpp \
					$(CORE_DIR)/core/hw/naomi/m1cartridge.cpp \
					$(CORE_DIR)/core/hw/naomi/m4cartridge.cpp \
					$(CORE_DIR)/core/hw/naomi/awcartridge.cpp \
					$(CORE_DIR)/core/hw/naomi/gdcartridge.cpp

ifeq ($(HAVE_GENERIC_JIT), 1)
DYNAREC_USED = 1
SOURCES_CXX += $(CORE_DIR)/core/rec-cpp/rec_cpp.cpp
endif

# Recompiler (x64)

ifneq ($(filter $(WITH_DYNAREC), x86_64 x64),)
DYNAREC_USED = 1
SOURCES_CXX += $(CORE_DIR)/core/rec-x64/rec_x64.cpp 
# Recompiler (x86 32bit)
#
else ifneq ($(filter $(WITH_DYNAREC), i386 i686 x86),)
DYNAREC_USED = 1
ifneq ($(filter $(platform), unix android),)
SOURCES_ASM += $(CORE_DIR)/core/rec-x86/rec_lin86_asm.S
else
SOURCES_ASM += $(CORE_DIR)/core/rec-x86/rec_win86_asm.S
#SOURCES_ASM += $(CORE_DIR)/core/hw/arm7/arm7_win86_asm.S
endif
SOURCES_CXX += $(CORE_DIR)/core/rec-x86/rec_x86_asm.cpp \
					$(CORE_DIR)/core/rec-x86/rec_x86_driver.cpp \
					$(CORE_DIR)/core/rec-x86/rec_x86_il.cpp \
					$(CORE_DIR)/core/rec-x86/x86_emitter.cpp
endif


# Recompiler (ARM)
ifeq ($(WITH_DYNAREC), arm)
DYNAREC_USED = 1
SOURCES_CXX += $(CORE_DIR)/core/rec-ARM/rec_arm.cpp
endif

ifeq ($(WITH_DYNAREC), arm)
SOURCES_ASM += $(CORE_DIR)/core/rec-ARM/ngen_arm.S
endif

# Recompiler (ARM64)
ifeq ($(WITH_DYNAREC), arm64)
DYNAREC_USED = 1
SOURCES_ASM += $(CORE_DIR)/core/rec-ARM64/ngen_arm64.S
SOURCES_CXX += $(CORE_DIR)/core/rec-ARM64/rec_arm64.cpp \
				$(DEPS_DIR)/vixl/code-buffer-vixl.cc \
				$(DEPS_DIR)/vixl/compiler-intrinsics-vixl.cc \
				$(DEPS_DIR)/vixl/cpu-features.cc \
				$(DEPS_DIR)/vixl/utils-vixl.cc \
				$(DEPS_DIR)/vixl/aarch64/assembler-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/cpu-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/cpu-features-auditor-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/decoder-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/disasm-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/instructions-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/instrument-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/logic-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/macro-assembler-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/operands-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/pointer-auth-aarch64.cc \
				$(DEPS_DIR)/vixl/aarch64/simulator-aarch64.cc
endif

ifeq ($(DYNAREC_USED),1)
SOURCES_CXX += $(CORE_DIR)/core/rec.cpp
# Dynarec
SOURCES_CXX += $(CORE_DIR)/core/hw/sh4/dyna/decoder.cpp \
					$(CORE_DIR)/core/hw/sh4/dyna/driver.cpp \
					$(CORE_DIR)/core/hw/sh4/dyna/blockmanager.cpp \
					$(CORE_DIR)/core/hw/sh4/dyna/shil.cpp \
					$(CORE_DIR)/core/hw/sh4/dyna/ssa.cpp 

endif

SOURCES_CXX += $(CORE_DIR)/core/libretro/libretro.cpp \
					$(CORE_DIR)/core/libretro/audiostream.cpp \
					$(CORE_DIR)/core/libretro/common.cpp \
					$(CORE_DIR)/core/libretro/vmem_utils.cpp

SOURCES_C +=   $(LIBRETRO_COMM_DIR)/memmap/memalign.c \
					$(LIBRETRO_COMM_DIR)/file/file_path.c \
					$(LIBRETRO_COMM_DIR)/vfs/vfs_implementation.c \
					$(LIBRETRO_COMM_DIR)/encodings/encoding_utf.c \
					$(LIBRETRO_COMM_DIR)/compat/compat_strl.c \
					$(LIBRETRO_COMM_DIR)/compat/fopen_utf8.c \
					$(LIBRETRO_COMM_DIR)/compat/compat_strcasestr.c

ifeq ($(NO_THREADS),1)
else
SOURCES_C += $(LIBRETRO_COMM_DIR)/rthreads/rthreads.c
endif

ifeq ($(HAVE_TEXUPSCALE),1)
SOURCES_CXX += $(DEPS_DIR)/xbrz/xbrz.cpp
endif

ifeq ($(HAVE_CHD),1)
INCFLAGS += -I$(DEPS_DIR)/flac/include

SOURCES_C += \
				 $(DEPS_DIR)/flac/bitmath.c \
				 $(DEPS_DIR)/flac/bitreader.c \
				 $(DEPS_DIR)/flac/cpu.c \
				 $(DEPS_DIR)/flac/crc.c \
				 $(DEPS_DIR)/flac/fixed.c \
				 $(DEPS_DIR)/flac/float.c \
				 $(DEPS_DIR)/flac/format.c \
				 $(DEPS_DIR)/flac/lpc.c \
				 $(DEPS_DIR)/flac/md5.c \
				 $(DEPS_DIR)/flac/memory.c \
				 $(DEPS_DIR)/flac/stream_decoder.c

SOURCES_C += $(DEPS_DIR)/lzma/C/7zArcIn.c \
				 $(DEPS_DIR)/lzma/C/7zBuf.c \
				 $(DEPS_DIR)/lzma/C/7zCrc.c \
				 $(DEPS_DIR)/lzma/C/7zCrcOpt.c \
				 $(DEPS_DIR)/lzma/C/7zDec.c \
				 $(DEPS_DIR)/lzma/C/7zFile.c \
				 $(DEPS_DIR)/lzma/C/7zStream.c \
				 $(DEPS_DIR)/lzma/C/Alloc.c \
				 $(DEPS_DIR)/lzma/C/Bcj2.c \
				 $(DEPS_DIR)/lzma/C/Bra86.c \
				 $(DEPS_DIR)/lzma/C/Bra.c \
				 $(DEPS_DIR)/lzma/C/BraIA64.c \
				 $(DEPS_DIR)/lzma/C/CpuArch.c \
				 $(DEPS_DIR)/lzma/C/Delta.c \
				 $(DEPS_DIR)/lzma/C/LzFind.c \
				 $(DEPS_DIR)/lzma/C/Lzma2Dec.c \
				 $(DEPS_DIR)/lzma/C/Lzma86Dec.c \
				 $(DEPS_DIR)/lzma/C/Lzma86Enc.c \
				 $(DEPS_DIR)/lzma/C/LzmaDec.c \
				 $(DEPS_DIR)/lzma/C/LzmaEnc.c \
				 $(DEPS_DIR)/lzma/C/LzmaLib.c \
				 $(DEPS_DIR)/lzma/C/Sort.c

endif

SOURCES_C +=   $(DEPS_DIR)/zlib/deflate.c \
					$(DEPS_DIR)/zlib/gzlib.c \
					$(DEPS_DIR)/zlib/uncompr.c \
					$(DEPS_DIR)/zlib/zutil.c \
					$(DEPS_DIR)/zlib/inffast.c \
					$(DEPS_DIR)/zlib/gzread.c \
					$(DEPS_DIR)/zlib/crc32.c \
					$(DEPS_DIR)/zlib/gzwrite.c \
					$(DEPS_DIR)/zlib/inflate.c \
					$(DEPS_DIR)/zlib/infback.c \
					$(DEPS_DIR)/zlib/inftrees.c \
					$(DEPS_DIR)/zlib/trees.c \
					$(DEPS_DIR)/zlib/gzclose.c \
					$(DEPS_DIR)/zlib/compress.c \
					$(DEPS_DIR)/zlib/adler32.c
